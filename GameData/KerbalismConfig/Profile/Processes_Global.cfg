@KERBALISM_PROFILE:FIRST
{
// ============================================================================
// Processes - non controllable
// ============================================================================

  PROCESS
  {
    // From ISS: see https://www.nasa.gov/pdf/179225main_ISS_Poster_Back.pdf and https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20110012997.pdf
    // 935 m³ volume, ~1105 m² surface (estimated), 0.227 Kg/day (structural)
    // Surface estimation: see the "Atmo Leak Estimation" spreadsheet in misc.
    // 1 Kerbin day is 1/4 of a human day so 0.227/4 = 0.05675 Kg/day
    // 0.05675 Kg/day over 1105 m² = 0.0513352488 (g/m²)/day.
    // Using the density of N2 from CRP we get 1.251 g/KSPunit = 0.0410353707 (unit/m²)/day
    // That divided over 21600 secs = 0.000001899785682 (unit/m²)/sec
    name = atmoLeaks
    categoryName = Pressure
    title = #KERBALISM_Process_AtmoLeaks_title
    desc = #KERBALISM_Process_AtmoLeaks_desc
    modifier = Habitat.pressurizedSurface * Max(0.0, Min(Habitat.pressure - EnvStaticPressure, 1.0))
    canToggle = false
    INPUT
    {
      name = KsmAtmosphere
      rate = 0.000001899785682  // leakage of Atmosphere (N2) per second for a surface area of 1 m²
    }
  }

  // IntakeAir is created by the stock air intake module (duh), the parts usually have a small capacity for it (0.5 > 5.0 units)
  // so we use it as a (not very reliable, but whatever) modifier to know when those parts are present, and scale it by the static pressure
  // TODO : Add something in the description of all parts that have an air intake module
  PROCESS
  {
    name = airScrubbingPump
    categoryName = LifeSupport
    title = #KERBALISM_Process_AirScrubbingPump_title
    desc = #KERBALISM_Process_AirScrubbingPump_desc
    modifier = if(EnvInOxygenAtmosphere, 1.0, 0.0) * if(Resource("IntakeAir").Capacity > 0.0, 1.0, 0.0) * EnvStaticPressure
    INPUT
    {
      name = KsmWasteAtmosphere
      rate = 1.0 // TODO : balance this
    }
  }

  PROCESS
  {
    name = airPressurePump
    categoryName = Pressure
    title = #KERBALISM_Process_AirPump_title
    desc = #KERBALISM_Process_AirPump_desc
    modifier = if(EnvInOxygenAtmosphere, 1.0, 0.0) * if(Resource("IntakeAir").Capacity > 0.0, 1.0, 0.0) * EnvStaticPressure
    OUTPUT
    {
      name = KsmAtmosphere
      rate = 1.0 // TODO : balance this
    }
    OUTPUT
    {
      name = Oxygen
      rate = 1.0 // TODO : balance this
    }
  }
}